version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: kafka-zookeeper
    ports:
      - "2181:2181"
    env_file:
      - .env
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    container_name: kafka-broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    env_file:
      - .env
    volumes:
      - ./app:/app
    networks:
      - kafka-network

  schema-registry:
    image: confluentinc/cp-schema-registry:7.4.0
    hostname: schema-registry
    container_name: kafka-schema-registry
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    env_file:
      - .env
    networks:
      - kafka-network

  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.4.0
    hostname: kafka-connect
    container_name: kafka-connect
    depends_on:
      - kafka
      - schema-registry
    ports:
      - "8083:8083"
    env_file:
      - .env
    volumes:
      - ./connectors:/etc/kafka-connect/jars
    networks:
      - kafka-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
      - schema-registry
    ports:
      - "8080:8080"
    env_file:
      - .env
    networks:
      - kafka-network

  producer:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: kafka-producer
    depends_on:
      - kafka
    volumes:
      - ./app:/app
    env_file:
      - .env
    command: python /app/producer.py
    networks:
      - kafka-network

  consumer:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: kafka-consumer
    depends_on:
      - kafka
    volumes:
      - ./app:/app
    env_file:
      - .env
    command: python /app/consumer.py
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge