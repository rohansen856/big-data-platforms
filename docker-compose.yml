version: '3.8'

services:
  # Apache Spark Cluster
  spark-master:
    image: bitnami/spark:3.4
    container_name: spark-master
    env_file:
      - .env
    environment:
      - SPARK_MODE=${SPARK_MODE_MASTER}
    ports:
      - "8080:8080"
      - "7077:7077"
    volumes:
      - ./spark/app:/app
      - ./spark/data:/data
      - ./shared-data:/shared-data
    networks:
      - big-data-network

  spark-worker:
    image: bitnami/spark:3.4
    container_name: spark-worker
    env_file:
      - .env
    environment:
      - SPARK_MODE=${SPARK_MODE_WORKER}
    ports:
      - "8081:8081"
    volumes:
      - ./spark/app:/app
      - ./spark/data:/data
      - ./shared-data:/shared-data
    depends_on:
      - spark-master
    networks:
      - big-data-network

  # Apache Kafka Cluster
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    env_file:
      - .env
    ports:
      - "2181:2181"
    networks:
      - big-data-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    env_file:
      - .env
    volumes:
      - ./kafka/app:/app
      - ./shared-data:/shared-data
    networks:
      - big-data-network

  # Apache Airflow
  airflow-postgres:
    image: postgres:13
    container_name: airflow-postgres
    env_file:
      - .env
    volumes:
      - airflow-postgres-data:/var/lib/postgresql/data
    networks:
      - big-data-network

  airflow-redis:
    image: redis:latest
    container_name: airflow-redis
    networks:
      - big-data-network

  airflow-webserver:
    image: apache/airflow:2.7.0-python3.9
    container_name: airflow-webserver
    depends_on:
      - airflow-postgres
      - airflow-redis
    env_file:
      - .env
    ports:
      - "8082:8080"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./shared-data:/shared-data
    command: webserver
    networks:
      - big-data-network

  airflow-scheduler:
    image: apache/airflow:2.7.0-python3.9
    container_name: airflow-scheduler
    depends_on:
      - airflow-postgres
      - airflow-redis
    env_file:
      - .env
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
      - ./shared-data:/shared-data
    command: scheduler
    networks:
      - big-data-network

  # ClickHouse
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    env_file:
      - .env
    volumes:
      - clickhouse-data:/var/lib/clickhouse
      - ./clickhouse/scripts:/docker-entrypoint-initdb.d
      - ./clickhouse/app:/app
      - ./shared-data:/shared-data
    networks:
      - big-data-network

  # Kafka UI
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8090:8080"
    env_file:
      - .env
    networks:
      - big-data-network

  # Tabix (ClickHouse UI)
  tabix:
    image: spoonest/clickhouse-tabix-web-client:latest
    container_name: tabix
    ports:
      - "8091:80"
    depends_on:
      - clickhouse
    env_file:
      - .env
    networks:
      - big-data-network

  # Jupyter Notebook for Spark
  jupyter:
    image: jupyter/pyspark-notebook:latest
    container_name: jupyter
    ports:
      - "8888:8888"
    env_file:
      - .env
    volumes:
      - ./spark/notebooks:/home/jovyan/work
      - ./shared-data:/home/jovyan/shared-data
    depends_on:
      - spark-master
    networks:
      - big-data-network

  # Data Generator (unified)
  data-generator:
    build: 
      context: ./data-generator
      dockerfile: Dockerfile
    container_name: data-generator
    depends_on:
      - kafka
      - clickhouse
    volumes:
      - ./shared-data:/shared-data
    env_file:
      - .env
    networks:
      - big-data-network

  # Apache Beam Services (optional - can be started separately)
  beam-batch:
    build:
      context: ./beam
      dockerfile: Dockerfile
    container_name: beam-batch-processor
    volumes:
      - ./beam/app:/app
      - ./shared-data:/shared-data
    environment:
      - BEAM_RUNNER=DirectRunner
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    command: python simple_batch.py
    depends_on:
      - kafka
      - spark-master
    networks:
      - big-data-network

  beam-streaming:
    build:
      context: ./beam
      dockerfile: Dockerfile
    container_name: beam-streaming-processor
    volumes:
      - ./beam/app:/app
      - ./shared-data:/shared-data
    environment:
      - BEAM_RUNNER=DirectRunner
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    command: python simple_batch.py
    depends_on:
      - kafka
    networks:
      - big-data-network
  
  # Apache Pig Services
  pig-processor:
    build:
      context: ./pig
      dockerfile: Dockerfile
    container_name: pig-processor
    volumes:
      - ./pig/scripts:/app/scripts
      - ./shared-data:/shared-data
    environment:
      - PIG_EXECUTION_MODE=local
    command: pig -x local /app/scripts/sample_analysis.pig
    networks:
      - big-data-network

  # Apache Flink Services
  flink-jobmanager:
    build:
      context: ./flink
      dockerfile: Dockerfile
    container_name: flink-jobmanager
    ports:
      - "8085:8081"
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    volumes:
      - ./flink/checkpoints:/opt/flink/checkpoints
      - ./shared-data:/shared-data
    command: jobmanager
    networks:
      - big-data-network

  flink-taskmanager:
    build:
      context: ./flink
      dockerfile: Dockerfile
    container_name: flink-taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    volumes:
      - ./flink/checkpoints:/opt/flink/checkpoints
      - ./shared-data:/shared-data
    command: taskmanager
    depends_on:
      - flink-jobmanager
    networks:
      - big-data-network

  # Apache Storm Services
  storm-nimbus:
    build:
      context: ./storm
      dockerfile: Dockerfile
    container_name: storm-nimbus
    ports:
      - "8086:8080"
    environment:
      - STORM_ZOOKEEPER_SERVERS=zookeeper:2181
    volumes:
      - ./storm/data:/opt/storm/data
      - ./shared-data:/shared-data
    command: storm nimbus
    depends_on:
      - zookeeper
    networks:
      - big-data-network

  storm-supervisor:
    build:
      context: ./storm
      dockerfile: Dockerfile
    container_name: storm-supervisor
    environment:
      - STORM_ZOOKEEPER_SERVERS=zookeeper:2181
    volumes:
      - ./storm/data:/opt/storm/data
      - ./shared-data:/shared-data
    command: storm supervisor
    depends_on:
      - storm-nimbus
    networks:
      - big-data-network

  storm-ui:
    build:
      context: ./storm
      dockerfile: Dockerfile
    container_name: storm-ui
    ports:
      - "8087:8080"
    environment:
      - STORM_ZOOKEEPER_SERVERS=zookeeper:2181
    command: storm ui
    depends_on:
      - storm-nimbus
    networks:
      - big-data-network

  # Hadoop Services
  hadoop-namenode:
    build:
      context: ./hadoop
      dockerfile: Dockerfile
    container_name: hadoop-namenode
    ports:
      - "9870:9870"
      - "9000:9000"
    environment:
      - CLUSTER_NAME=hadoop-cluster
    volumes:
      - hadoop-namenode:/opt/hadoop/data/namenode
      - ./shared-data:/shared-data
    command: hdfs namenode
    networks:
      - big-data-network

  hadoop-datanode:
    build:
      context: ./hadoop
      dockerfile: Dockerfile
    container_name: hadoop-datanode
    ports:
      - "9864:9864"
    volumes:
      - hadoop-datanode:/opt/hadoop/data/datanode
      - ./shared-data:/shared-data
    command: hdfs datanode
    depends_on:
      - hadoop-namenode
    networks:
      - big-data-network

  hadoop-resourcemanager:
    build:
      context: ./hadoop
      dockerfile: Dockerfile
    container_name: hadoop-resourcemanager
    ports:
      - "8088:8088"
    volumes:
      - ./shared-data:/shared-data
    command: yarn resourcemanager
    depends_on:
      - hadoop-namenode
    networks:
      - big-data-network

  hadoop-nodemanager:
    build:
      context: ./hadoop
      dockerfile: Dockerfile
    container_name: hadoop-nodemanager
    ports:
      - "8042:8042"
    volumes:
      - ./shared-data:/shared-data
    command: yarn nodemanager
    depends_on:
      - hadoop-resourcemanager
    networks:
      - big-data-network

  # Apache Hive Services
  hive-metastore:
    build:
      context: ./hive
      dockerfile: Dockerfile
    container_name: hive-metastore
    ports:
      - "9083:9083"
    volumes:
      - hive-metastore:/tmp/hive/metastore_db
      - hive-warehouse:/tmp/hive/warehouse
      - ./shared-data:/shared-data
    command: hive --service metastore
    depends_on:
      - hadoop-namenode
    networks:
      - big-data-network

  hive-server2:
    build:
      context: ./hive
      dockerfile: Dockerfile
    container_name: hive-server2
    ports:
      - "10000:10000"
      - "10002:10002"
    volumes:
      - hive-warehouse:/tmp/hive/warehouse
      - ./shared-data:/shared-data
    command: hive --service hiveserver2
    depends_on:
      - hive-metastore
    networks:
      - big-data-network

volumes:
  airflow-postgres-data:
  clickhouse-data:
  hadoop-namenode:
  hadoop-datanode:
  hive-metastore:
  hive-warehouse:

networks:
  big-data-network:
    driver: bridge